@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel

@{
    ViewData["Title"] = "Log in";
}

<div class="ui main container">
  <div class="ui middle aligned center aligned grid">
    <div class="column">
      <h2 class="ui image header">
        <div class="content">
          Log-in to your account
        </div>
      </h2>
      <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="ui large form">
        <div class="ui stacked segment">
          <div class="field">
            <div class="ui left icon input">
              <i class="user icon"></i>
              <input type="text" name="email" placeholder="E-mail address">
            </div>
          </div>
          <div class="field">
            <div class="ui left icon input">
              <i class="lock icon"></i>
              <input type="password" name="password" placeholder="Password">
            </div>
          </div>
          <div class="ui fluid large submit button">Login</div>
        </div>
        <div class="ui error message"></div>
        <div id="demo_login" class="ui message">

          <button 
              id="demo_user"
              type="button"
              data-return-url = "@ViewData["ReturnUrl"]"
              data-email = "demouser@@email.com"
              data-password = "P@ssw0rd!"
              class="ui button primary">
              Demo User
          </button>
          <button 
              type="button"
              data-email = "demoadmin@email.com"
              data-password ="P@ssw0rd!"
              class="ui button primary">
              Demo Admin
          </button>
        </div>
        @if (ViewData.ModelState.Count > 0)
        {
            <div class="ui negative message" style="text-align:left">
                @foreach (var modelStateVal in ViewData.ModelState.Values)
                {
                    foreach (var error in modelStateVal.Errors)
                    {
                       <li>@error.ErrorMessage</li>
                    }
                }
            </div>
        }
      </form>
      <div class="ui message">
      <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
      </div>
    </div>
  </div>
</div>
@section scripts
{
<script>
  $(document).ready(function () {
    var button;
    $("#demo_user").on("click", loginUser);

    function loginUser (e) {
      button = $(e.target);
      var email = button.attr("data-email");
      var password = button.attr("data-password");
      var returnUrl = button.attr("data-return-url");
      var token = $('input[name="__RequestVerificationToken"]').val();
      alert(returnUrl);
      console.log(returnUrl);
      alert("@ViewData["ReturnUrl"]");
      console.log("@ViewData["ReturnUrl"]");
      loginUserCall(email, password, returnUrl, token);
    };

    function loginUserCall(email, password, returnUrl, token) {
      var data = {};
      data.Email = email;
      data.Password = password;
      $.ajax({
         url: "/Account/Login",
         method: "POST",
         data:{
           model: data,
           __RequestVerificationToken: token,
           returnUrl:"Home/Index"  
         },
          
         success: function (data) {
           new Noty({
              text: 'Login Successful'
          }).setTimeout(2000).show();
         alert(data);
         console.log(data);
         window.location='/';
         }
        ,
         error: function(xhr, ajaxOptions, thrownError){
          alert('something went wrong')  
         },
      });
    }
  })
</script>
}

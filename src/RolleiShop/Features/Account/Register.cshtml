@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<div class="ui main container">
  <div class="ui middle aligned center aligned grid">
    <div class="column">
      <h2 class="ui image header">
        <div class="content">
          Register an account
        </div>
      </h2>
      <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="ui large form">
        <div class="ui stacked segment">
          <div class="field">
            <div class="ui left icon input">
              <i class="user icon"></i>
              <input asp-for="Email" type="text" name="email" placeholder="E-mail address">
            </div>
          </div>

          <div class="field">
            <div class="ui left icon input">
              <i class="lock icon"></i>
              <input asp-for="Password" type="password" name="password" placeholder="Password">
            </div>
          </div>

          <div class="field">
            <div class="ui left icon input">
              <i class="lock icon"></i>
              <input asp-for="ConfirmPassword" type="password" name="confirmpassword" placeholder="Password">
            </div>
          </div>

          <div class="ui fluid large submit button">Register</div>
        </div>

        <div class="ui error message"></div>

        @if (ViewData.ModelState.Count > 0)
        {
            <div class="ui negative message" style="text-align:left">
                @foreach (var modelStateVal in ViewData.ModelState.Values)
                {
                    foreach (var error in modelStateVal.Errors)
                    {
                       <li>@error.ErrorMessage</li>
                    }
                }
            </div>
        }

      </form>
      <div class="ui message">
      <a asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]">Log-in
        to your account</a>
      </div>
    </div>
  </div>
</div>
